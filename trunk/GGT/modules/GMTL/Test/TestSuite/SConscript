import os
pj = os.path.join

Import('baseEnv PREFIX')
Import('GetPlatform')

sources = Split("""
   runner.cpp
""")

# Add in the sources from the subdirectories
testcases_sources = SConscript(dirs = 'TestCases')
testcases_sources = map(lambda n: pj('TestCases', n), testcases_sources)
sources.extend(testcases_sources)

print 'Sources:'
for s in sources:
   print '\t' + str(s)

# Setup the runtests executable target
env = baseEnv.Copy()
ParseConfig(env, '/home/vr/Juggler/linux/gcc30/bin/cppunit-config --cflags --libs')
env.Append(CPPPATH = Split('#Test/TestSuite #'),
           LIBS = Split('dl'))

if GetPlatform() == 'linux':
   env.Append(CXXFLAGS = ['-fexceptions'])

if GetPlatform() == 'irix':
   env.Append(CPPPATH = ['#../../external/boost/boost/compatibility/cpp_c_headers'],
              LIBS = ['m'])

env.Program('runtests', sources)
