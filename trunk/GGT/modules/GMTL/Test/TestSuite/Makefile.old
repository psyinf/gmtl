# ********************************************************** ggt-heading beg
#
# GGT: Generic Graphics Toolkit
#
# Original Authors:
#   Allen Bierbaum
#
# -----------------------------------------------------------------
# File:          $RCSfile: Makefile.old,v $
# Date modified: $Date: 2002-01-26 23:15:47 $
# Version:       $Revision: 1.1 $
# -----------------------------------------------------------------
#
# ********************************************************** ggt-heading end
# **************************************************************** ggt-cpr beg
#
# GGT: The Generic Graphics Toolkit
# Copyright (C) 2001,2002 Allen Bierbaum 
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# **************************************************************** ggt-cpr end
# -----------------------------------------------------------------------------
# Makefile.in for test/TestSuite
# $Id: Makefile.old,v 1.1 2002-01-26 23:15:47 allenb Exp $
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------
# IMPORTANT NOTE:
#     This application will not compile unless you are using GNU make.
# -----------------------------------------------------------------------------

default: static

GGT_ROOT	= ../../../../

# Include common definitions.
include @topdir@/make.defs.mk


#GFX_SRCDIR	= @BSYS_SRCDIR@/test/TestSuite
OBJDIR      = .
#INSTALL		= @INSTALL@
#WORKDIR		= ${topdir}/test/TestSuite
CPPUNIT_DIR = $(GGT_ROOT)/external/cppunit

# Path to all the local source files
CPPUNIT_SRC_PATH = \
	$(CPPUNIT_DIR)/framework \
	$(CPPUNIT_DIR)/CppUnit/textui

TESTS_SRC_PATH = .

# Search path for source code and object files.
vpath
vpath %.cpp @srcdir@ $(CPPUNIT_SRC_PATH) $(TESTS_SRC_PATH)
#vpath %.${OBJ_FILE_SUFFIX} ${OBJDIR}

# This should be included before the options are set so that defaults set in
# this file can be overridden.
include $(MKPATH)/bsys.prog.mk

# SRC Files
TEST_SRCS = 
CPPUNIT_TEXTUI_SRCS = TestRunner.cpp TextTestResult.cpp
CPPUNIT_SRCS = TestCase.cpp \
               TestResult.cpp \
               TestFailure.cpp \
               TestSuite.cpp
TESTDRIVER_SRCS = testSuite.cpp
TESTSUITE_SRCS	:= $(TEST_SRCS) $(CPPUNIT_TEXTUI_SRCS) $(CPPUNIT_SRCS) $(TESTDRIVER_SRCS)

# --------------------
# C++ compiling
# --------------------
APP		     = runner
APP_SRCS	    := $(TESTSUITE_SRCS)
APP_OBJS	    := $(APP_SRCS:.cpp=.$(OBJ_FILE_SUFFIX))
DEPEND_FILES	:= $(APP_SRCS:.cpp=.d)
#LDFLAGS		+= -L$(topdir)/lib$(LIBBITSUF)
#LIBS		+= -lgfx -lm
GMTL_INCLUDES = -I$(GGT_ROOT)/modules/GMTL/
SUITE_INCLUDES = -I$(srcdir)/CppUnit/framework -I$(srcdir)/CppUnit/textui
INCLUDES    +=  $(GMTL_INCLUDES) $(SUITE_INCLUDES)

# On Linux, we cannot do static linking with the NSPR for some reason.
# Because of that, we have to use this nasty hack to get around it.  Here,
# the NSPR and ORB libraries are named with the full path to their static
# versions.
ifeq (@PLATFORM@, Linux)
#    LDFLAGS_STATIC	:=
#    LIBS		:=
#    STATIC_LIBS		+= $(NSPR_LIB_STATIC) $(topdir)/lib$(LIBBITSUF)/libgfx.a
#    SYS_LIBS		+= ${PF_LIBS} -ldl
endif


# ----------------------------------------------------------------------------
# Targets.
# ----------------------------------------------------------------------------
all: $(APP)

$(APP): $(APP_OBJS)
	$(CXX_COMPILE) $(OBJ_NAME_FLAG) $(APP_OBJS) $(LDFLAGS_BEGIN)	\
          $(LIBS) $(LDFLAGS_END) $(SYS_LIBS)

# -----------------------------------------------------------------------------
# Clean-up.
# -----------------------------------------------------------------------------
CLEAN_FILES	+= $(APP_OBJS) $(APP)

# -----------------------------------------------------------------------------
# Include dependencies generated automatically.
# -----------------------------------------------------------------------------
ifndef DO_CLEANDEPEND
ifndef BEFOREBUILD
    include $(DEPEND_FILES)
endif
endif
